/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import org.omg.CORBA.NO_RESOURCES;

import static org.junit.Assert.*;

public class CalculatorTest {

    @Test 
    public void calculate_empty_string_(){
        //arrange
        Calculator calculator = new Calculator();
        //act
        int result = calculator.Add("");
        //assert
        assertSame(result, 0);
    }

    @Test 
    public void calculate_1number(){
        //arrange
        Calculator calculator = new Calculator();
        String number = "1";
        //act
        int result = calculator.Add(number);
        //assert
        assertSame(result, 1);
    }

    @Test
    public void calculate_two_nunbers() {
        Calculator calculator = new Calculator();
        int result = calculator.Add("1,2");
        assertSame(result, 3);
    }

    @Test
    public void calculate_n_numbers(){
        Calculator calculator = new Calculator();
        int result = calculator.Add("1,1,2");
        assertSame(result, 4);
    }
        
    @Test
    public void calculate_newline_commas_number() {
        Calculator calculator = new Calculator();
        int result = calculator.Add("1\n2,3");
        assertSame(result, 6);
    }

    @Test
    public void calculate_notok_newline_numbers(){
        Calculator calculator = new Calculator();
        int result = calculator.Add("1,\n");
        assertSame(result,1);
    }

    @Test
    public void calculate_newDelim_numbers() {
        Calculator calculator = new Calculator();
        int result = calculator.Add("//;\n1;2");
        assertSame(result,3);
    }

    @Test(expected = IllegalArgumentException.class)
    public void calculate_with_negatives(){
        try{
            Calculator calculator = new Calculator();
            int result = calculator.Add("1,2,-2");
        }
        catch(IllegalArgumentException re ){
            String message = "negatives not allowed: -2";
            assertEquals(message, re.getMessage());
            throw re;
        }
        fail("Negative numbers exception did not throw!");
    }

    @Test(expected = IllegalArgumentException.class)
    public void calculate_with_multiple_negatives(){
        try{
            Calculator calculator = new Calculator();
            int result = calculator.Add("1,2,-2,-1");
        }
        catch(IllegalArgumentException re ){
            String message = "negatives not allowed: -2 -1";
            assertEquals(message, re.getMessage());
            throw re;
        }
        fail("Negative numbers exception did not throw!");
    }

    @Test
    public void calculate_with_big_numbers(){
        Calculator calculator = new Calculator();
        int result = calculator.Add("1,2,1002");
        assertSame(result, 3);
    }
}


