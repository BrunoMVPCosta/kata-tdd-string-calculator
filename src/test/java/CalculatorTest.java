/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import org.junit.Rule;
import static org.junit.Assert.*;
import org.junit.rules.ExpectedException;
public class CalculatorTest {

  @Rule
  public final ExpectedException expectedException = ExpectedException.none();

  @Test
  public void addGivenEmptyReturn0() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "";
   assertEquals(calculator.add(number), 0);
  }

  @Test
  public void addGiven1Return1() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "1";
   assertEquals(calculator.add(number), 1);
  }

  @Test
  public void addGiven1and1Return2() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "1,1";
   assertEquals(calculator.add(number), 2);
  }

  @Test
  public void addGivenNumbersReturnSum() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "1,2";
   assertEquals(calculator.add(number), 3);
  }

  @Test
  public void addGiven5NumbersReturnSum() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "1,2,3,4,5";
   assertEquals(calculator.add(number), 15);
  }

  @Test
  public void addGivenNumbersWithNewLineReturnSum() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "1\n2,3,4,5";
   assertEquals(calculator.add(number), 15);
  }

  @Test
  public void addGivenNumbersWithCustomDelimiterReturSum() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "//;\n1;2;3;4;5";
   assertEquals(calculator.add(number), 15);
  }

  @Test
  public void addGivenOneNegativeNumberReturnException() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "-1,2,3,4,5";
   expectedException.expect(NegativeNotAllowedException.class);
   expectedException.expectMessage("negatives not allowed: -1");
   calculator.add(number);
  }

  @Test
  public void addGivenMultipleNegativeNumbersReturnException() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "-1,2,-3,4,-5";
   expectedException.expect(NegativeNotAllowedException.class);
   expectedException.expectMessage("negatives not allowed: -1 -3 -5");
   calculator.add(number);
  }

  @Test
  public void addGivenGreatherThan1000NumbersIgnore() throws NegativeNotAllowedException {
   Calculator calculator = new Calculator();
   String number = "1,2000,2,4,5";
   assertEquals(calculator.add(number), 12);
  }

}
